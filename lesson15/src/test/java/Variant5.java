import org.junit.jupiter.api.Test;

public class Variant5 {
    @Test
    void task1() {
      /*
        Вам надо разработать 1 тест, сценарий для этого теста я вам уже придумал и запишу ниже.
        Шаги:
         - Перейдите на сайт https://www.jenkins.io/
         - Развернуть окно браузера на весь экран
         - Проверить, что формат картинки в карусели .png (На скрине img_1 вы найдёте под пунктом 1 картинку из этого шага).
         */
    }

    @Test
    void task2() {
        /*
        Вам надо разработать 1 тест, сценарий для этого теста я вам уже придумал и запишу ниже.
        Шаги:
         - Перейдите на сайт https://rest-assured.io/
         - Развернуть окно браузера на весь экран
         - В навбаре кликнуть по вкладке 'DOCS' (На скрине img_3 вы найдёте под пунктом 1 элемент из этого шага).
         - Кликнуть по ссылке 'Getting Started' в меню слева (На скрине img_3 вы найдёте под пунктом 2 элемент из этого шага).
         - Проверить, что текст 'GettingStarted' виден (На скрине img_2 вы найдёте под пунктом 1 элемент из этого шага).
         - Проверить, что текущий url https://github.com/rest-assured/rest-assured/wiki/GettingStarted

         Подсказка, с кликом по Getting Started могут быть проблемы, вам поможет клик через JS.
         Я подскажу какой класс надо использовать и метод, но уже как сделать клик через JS вам надо будет самостоятельно поискать.

         Используйте интерфейс JavascriptExecutor и метод executeScript, в этот метод вам надо передать нужный скрипт и элемент.
         */
    }

    @Test
    void task3() {
      /*
        Вам надо разработать 1 тест, сценарий для этого теста я вам уже придумал и запишу ниже.
        Шаги:
         - Перейдите на сайт https://rest-assured.io/
         - Развернуть окно браузера на весь экран
         - В навбаре кликнуть по вкладке 'DOCS' (На скрине img_3 вы найдёте под пунктом 1 элемент из этого шага).
         - Кликнуть по ссылке 'Downloads' в меню слева (На скрине img_3 вы найдёте под пунктом 3 элемент из этого шага).
         - Проверить, что текст 'Downloads' виден (На скрине img_4 вы найдёте под пунктом 1 элемент из этого шага).
         - Проверить, что текущий url https://github.com/rest-assured/rest-assured/wiki/Downloads
         - Проверить, что таблица аттрибутов содержит 2 колонки и 8 рядов (без учёта ряда заголовка) (На скрине img_4 вы найдёте под пунктом 2 таблицу из этого шага).

         Подсказка, с кликом по Downloads могут быть проблемы, вам поможет клик через JS.
         Я подскажу какой класс надо использовать и метод, но уже как сделать клик через JS вам надо будет самостоятельно поискать.

         Используйте интерфейс JavascriptExecutor и метод executeScript, в этот метод вам надо передать нужный скрипт и элемент.

         */
    }
}
